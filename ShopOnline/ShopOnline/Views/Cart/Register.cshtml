@model ShopOnline.Models.RegisterModel
@using BotDetect.Web.Mvc;
@{

    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@section Script{
    <link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
          rel="stylesheet" type="text/css" />
}

@if (ViewBag.Success != null)
{
    <div class="alert alert-success">Creating a new user has successfull!</div>
}

@using (Html.BeginForm("Cart", "Register", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Register</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-md-2">Verify capcha:</label>
            <div class="col-md-6">
                @{ MvcCaptcha exampleCaptcha = new MvcCaptcha("ExampleCaptcha"); }
                @Html.Captcha(exampleCaptcha)
                @Html.TextBox("CaptchaCode")
            </div>
        </div>
       
        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <center><button type="submit" value="Register" class="btn btn-success" /></center>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
