@model Model.EF.Slide

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section header{
    Create slide}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading"> Fill slide information</div>
            <div class="panel-body ">
                <div class="row">
                    <div class="col-lg-12">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FirstTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.FirstTitle, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.FirstTitle, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SecondTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.SecondTitle, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SecondTitle, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Image, new { @class = "form-control", @id = "txtImage"  })
                                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                        <input id="btnButton" type="button" class="btn btn-success" value="Choose image" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.DisplayOrder, new { @class = "form-control"  })
                                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Link, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.MetaKeywords, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                            @Html.CheckBoxFor(model => model.Status)
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-8">
                                        <input type="submit" value="Create" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripst{
<script type="text/javascript">
    $(document).ready(function () {
        $('#btnButton').on('click', function () {
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        });
    });
</script>

}
