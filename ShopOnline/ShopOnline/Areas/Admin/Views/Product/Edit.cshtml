@model Model.EF.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section header{
    Edit Product}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading"> Enter product information</div>
            <div class="panel-body ">
                <div class="row">
                    <div class="col-lg-12">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MetaTtile, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.MetaTtile, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MetaTtile, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Image, new { @class = "form-control", @id = "txtImage" })
                                        <input id="btnImage" type="button" class="btn btn-info" value="Choose image" />
                                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MoreImages, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.MoreImages, new { @class = "form-control", @disabled = "disabled", @id = "txtMoreImage" })
                                        <input id="btnChooseImage" class="btn btn-info" value="Manage more images" type="button">
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.PromotionPrice, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.IncludeVAT, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.CheckBoxFor(model => model.IncludeVAT, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IncludeVAT, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Quanlity, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Quanlity, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Quanlity, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.CatalogyID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.CatalogyID, null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CatalogyID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextAreaFor(model => model.Detail, new { @class = "form-control", @id = "txtDetail" })
                                        @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Waranty, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.Waranty, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Waranty, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.MetaKeywords, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.MetaDescriptions, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.TopHot, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.TopHot, new { @class = "form-control datepicker" })
                                        @Html.ValidationMessageFor(model => model.TopHot, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.ViewCount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.ViewCount, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-md-offset-2 col-md-8">
                                        <input type="submit" value="Save" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Manage more image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="listImage">
                </div>
                <input id="btnChoose" type="button" class="btn btn-primary" value="Choose" />

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btnSave" type="button" class="btn btn-primary btnSave">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripst{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script type="text/javascript">
        $(function () { // will trigger when the document is ready
            $('.datepicker').datepicker({
                dateFormat: "dd/MM/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "2010:2030"
            }); //Initialise any date pickers

        });

        $(document).ready(function () {
            $('#btnImage').on('click', function () {
                var finder = new CKFinder();
                finder.selectActionFunction = function (url) {
                    $('#txtImage').val(url);
                };
                finder.popup();
            });

            $('#btnChooseImage').off('click').on('click', function () {
                var list = $.parseJSON($('#txtMoreImage').val());
                $.each(list, function (index, value) {
                    $('#listImage').append('<span><img src="' + value + '" width="100 height=100"/><input type="button" class="btn btn-danger btnDel" value="X"></span>');

                });
                $('#exampleModalCenter').modal('show');

            });

            $('#btnChoose').off('click').on('click', function () {
                var finder = new CKFinder();

                finder.selectActionFunction = function (url) {
                    $('#listImage').append('<span><img src="' + url + '" width="100 height=100"/><input type="button" class="btn btn-danger btnDel" value="X"></span>');
                    $('.btnDel').off('click').on('click', function () {
                        $(this).parent().remove();
                    });
                };

                finder.popup();
            });



            $('#btnSave').off('click').on('click', function () {
                list = [];
                $.each($('#listImage img'), function (index, value) {
                    list.push($(value).prop('src'));
                });
                var value = JSON.stringify(list);
                $('#txtMoreImage').val(value);
                $('#exampleModalCenter').modal('hide');

            });
        });
        window.CKEDITOR_BASEPATH = '/Resources/Admin/ckeditor/ckeditor.js';
        var editor = CKEDITOR.replace('txtDetail', {});

    </script>


}
